<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="'{0}' and '{1}' do not match." xml:space="preserve">
    <value>'{0}' ve '{1}' eşleşmiyor.</value>
    <comment>DataAnnotations: CompareAttribute_MustMatch</comment>
  </data>
  <data name="A non-empty request body is required." xml:space="preserve">
    <value>İstek gövdesi boş olmamalı</value>
    <comment>ModelBinding: ModelBinding_MissingRequestBodyRequiredMember</comment>
  </data>
  <data name="A user with this login already exists." xml:space="preserve">
    <value>Bir harici giriş zaten bu hesaba bağlıdır.</value>
    <comment>Identity: LoginAlreadyAssociated</comment>
  </data>
  <data name="A value for the '{0}' parameter or property was not provided." xml:space="preserve">
    <value>'{0}' alanı değer içermiyor</value>
    <comment>ModelBinding: ModelBinding_MissingBindRequiredMember</comment>
  </data>
  <data name="A value is required." xml:space="preserve">
    <value>Değer gerekli</value>
    <comment>ModelBinding: KeyValuePair_BothKeyAndValueMustBePresent</comment>
  </data>
  <data name="An unknown failure has occurred." xml:space="preserve">
    <value>Kullanıcı yönetim sistemi hatası.</value>
    <comment>Identity: DefaultError</comment>
  </data>
  <data name="Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute." xml:space="preserve">
    <value>Hem ErrorMessageResourceType hem de ErrorMessageResourceName öğesinin bu nitelikte ayarlanması gerekir.</value>
    <comment>DataAnnotations: ValidationAttribute_NeedBothResourceTypeAndResourceName</comment>
  </data>
  <data name="Cannot retrieve property '{0}' because localization failed.  Type '{1}' is not public or does not contain a public static string property with the name '{2}'." xml:space="preserve">
    <value>Yerelleştirme başarısız olduğu için '{0}' özelliği alınamıyor. '{1}' türü genel değil veya '{2}' adlı bir genel statik dize özelliği içermiyor.</value>
    <comment>DataAnnotations: LocalizableString_LocalizationFailed</comment>
  </data>
  <data name="Could not convert the value of type '{0}' to '{1}' as expected by method {2}.{3}." xml:space="preserve">
    <value>'{0}' türünün değeri, {2}. {3} yöntemi tarafından beklendiği gibi '{1}' değerine dönüştürülemedi.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Type_Conversion_Failed</comment>
  </data>
  <data name="Could not find a property named {0}." xml:space="preserve">
    <value>{0} adlı bir özellik bulunamadı.</value>
    <comment>DataAnnotations: CompareAttribute_UnknownProperty</comment>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Tarih</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Either ErrorMessageString or ErrorMessageResourceName must be set, but not both." xml:space="preserve">
    <value>ErrorMessageString veya ErrorMessageResourceName ayarlarının yapılması gerekir, ancak ikisi birden değil.</value>
    <comment>DataAnnotations: ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource</comment>
  </data>
  <data name="Email '{0}' is already taken." xml:space="preserve">
    <value>Eposta adresi '{0}' önceden kayıtlıdır</value>
    <comment>Identity: DuplicateEmail</comment>
  </data>
  <data name="Email '{0}' is invalid." xml:space="preserve">
    <value>Eposta adresi '{0}' geçerli değildir.</value>
    <comment>Identity: InvalidEmail</comment>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Kimlik</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Incorrect password." xml:space="preserve">
    <value>Yazdığınız şifre hesabınızda kayıtlı olan şifre ile eşleşmiyor.</value>
    <comment>Identity: PasswordMismatch</comment>
  </data>
  <data name="Invalid token." xml:space="preserve">
    <value>Doğrulama kodu geçerli değildir.</value>
    <comment>Identity: InvalidToken</comment>
  </data>
  <data name="IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context)." xml:space="preserve">
    <value>IsValid (nesne değeri) bu sınıf tarafından uygulanmadı. Tercih edilen giriş noktası GetValidationResult () 'dir ve sınıflar IsValid'i (nesne değeri, ValidationContext bağlamı) geçersiz kılmalıdır.</value>
    <comment>DataAnnotations: ValidationAttribute_IsValid_NotImplemented</comment>
  </data>
  <data name="Lockout is not enabled for this user." xml:space="preserve">
    <value>Kullanıcı kilidi aktif değildir.</value>
    <comment>Identity: UserLockoutNotEnabled</comment>
  </data>
  <data name="MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length." xml:space="preserve">
    <value>MaxLengthAttribute, sıfırdan büyük bir Uzunluk değerine sahip olmalıdır. Dize veya dizinin izin verilen maksimum uzunluğa sahip olduğunu belirtmek için parametreler olmadan MaxLength () kullanın.</value>
    <comment>DataAnnotations: MaxLengthAttribute_InvalidMaxLength</comment>
  </data>
  <data name="MetadataClassType cannot be null." xml:space="preserve">
    <value>MetadataClassType boş olamaz.</value>
    <comment>DataAnnotations: MetadataTypeAttribute_TypeCannotBeNull</comment>
  </data>
  <data name="MinLengthAttribute must have a Length value that is zero or greater." xml:space="preserve">
    <value>MinLengthAttribute, sıfır veya daha büyük olan bir Uzunluk değerine sahip olmalıdır.</value>
    <comment>DataAnnotations: MinLengthAttribute_InvalidMinLength</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Ad</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Optimistic concurrency failure, object has been modified." xml:space="preserve">
    <value>Eş-zamanlama hatası.</value>
    <comment>Identity : ConcurrencyFailure</comment>
  </data>
  <data name="Passwords must be at least {0} characters." xml:space="preserve">
    <value>Şifre en az '{0}' karakter uzunluğunda olmalı.</value>
    <comment>Identity: PasswordTooShort</comment>
  </data>
  <data name="Passwords must have at least one digit ('0'-'9')." xml:space="preserve">
    <value>Şifre rakam içermelidir (0 - 9).</value>
    <comment>Identity: PasswordRequiresDigit</comment>
  </data>
  <data name="Passwords must have at least one lowercase ('a'-'z')." xml:space="preserve">
    <value>Şifre küçük harf içermelidir (a - z).</value>
    <comment>Identity: PasswordRequiresLower</comment>
  </data>
  <data name="Passwords must have at least one non alphanumeric character." xml:space="preserve">
    <value>Şifre harf-rakam olmayan karakterler içermelidir (! + . - ? ...)</value>
    <comment>Identity: PasswordRequiresNonAlphanumeric</comment>
  </data>
  <data name="Passwords must have at least one uppercase ('A'-'Z')." xml:space="preserve">
    <value>Şifre büyük harf içermelidir (A - Z).</value>
    <comment>Identity: PasswordRequiresUpper</comment>
  </data>
  <data name="Passwords must use at least {0} different characters." xml:space="preserve">
    <value>Şifre en az '{0}' benzersiz karakter içermelidir.</value>
    <comment>Identity: PasswordRequiresUniqueChars</comment>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Fiyat</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Recovery code redemption failed." xml:space="preserve">
    <value>Kurtarma kodu kullanılamadı.</value>
    <comment>Identity: RecoveryCodeRedemptionFailed</comment>
  </data>
  <data name="Role name '{0}' is already taken." xml:space="preserve">
    <value>Rol adı '{0}' önceden kayıtlıdır.</value>
    <comment>Identity: DuplicateRoleName</comment>
  </data>
  <data name="Role name '{0}' is invalid." xml:space="preserve">
    <value>Rol adı '{0}' geçerli değildir.</value>
    <comment>Identity: InvalidRoleName</comment>
  </data>
  <data name="The argument '{0}' cannot be null, empty or contain only whitespace." xml:space="preserve">
    <value>'{0}' argümanı boş olamaz, boş olamaz veya sadece boşluk içerebilir.</value>
    <comment>DataAnnotations: ArgumentIsNullOrWhitespace</comment>
  </data>
  <data name="The associated metadata type for type '{0}' contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type." xml:space="preserve">
    <value>'{0}' tipi için ilişkili meta veri türü, aşağıdaki bilinmeyen özellikleri veya alanları içerir: {1}. Lütfen bu üyelerin adlarının ana türdeki özelliklerin adlarıyla eşleştiğinden emin olun.</value>
    <comment>DataAnnotations: AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties</comment>
  </data>
  <data name="The custom DataType string cannot be null or empty." xml:space="preserve">
    <value>Özel DataType dizesi boş veya hiç olamaz.</value>
    <comment>DataAnnotations: DataTypeAttribute_EmptyDataTypeString</comment>
  </data>
  <data name="The custom validation type '{0}' must be public." xml:space="preserve">
    <value>Özel doğrulama türü '{0}' genel olmalı.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Type_Must_Be_Public</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' does not exist in type '{1}' or is not public and static." xml:space="preserve">
    <value>'{0}' CustomValidationAttribute yöntemi, '{1}' türünde mevcut değil veya genel ve statik değil.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Not_Found</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' in type '{1}' must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional." xml:space="preserve">
    <value>'{1}' türündeki '{0}' CustomValidationAttribute yöntemi beklenen imzayla eşleşmelidir: public static ValidationResult {0} (nesne değeri, ValidationContext bağlamı). Değer kesinlikle yazılabilir. ValidationContext parametresi isteğe bağlıdır.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Signature</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' in type '{1}' must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success." xml:space="preserve">
    <value>'{1}' türündeki CustomValidationAttribute yöntemi '{0}', System.ComponentModel.DataAnnotations.ValidationResult öğesini döndürmelidir. Başarıyı temsil etmek için System.ComponentModel.DataAnnotations.ValidationResult.Success kullanın.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Must_Return_ValidationResult</comment>
  </data>
  <data name="The CustomValidationAttribute.Method was not specified." xml:space="preserve">
    <value>CustomValidationAttribute.Method belirtilmedi.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Required</comment>
  </data>
  <data name="The CustomValidationAttribute.ValidatorType was not specified." xml:space="preserve">
    <value>CustomValidationAttribute.ValidatorType belirtilmedi.</value>
    <comment>DataAnnotations: CustomValidationAttribute_ValidatorType_Required</comment>
  </data>
  <data name="The field must be a number." xml:space="preserve">
    <value>Alan rakam olmalı</value>
    <comment>ModelBinding: HtmlGeneration_NonPropertyValueMustBeNumber</comment>
  </data>
  <data name="The field of type {0} must be a string, array or ICollection type." xml:space="preserve">
    <value>{0} tipindeki alan bir string, array veya ICollection tipinde olmalıdır.</value>
    <comment>DataAnnotations: LengthAttribute_InvalidValueType</comment>
  </data>
  <data name="The field {0} is invalid." xml:space="preserve">
    <value>{0} alanı geçersiz.</value>
    <comment>DataAnnotations: ValidationAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a number." xml:space="preserve">
    <value>'{0}' alanı rakam olmalı</value>
    <comment>ModelBinding: HtmlGeneration_ValueMustBeNumber</comment>
  </data>
  <data name="The field {0} must be a string or array type with a maximum length of '{1}'." xml:space="preserve">
    <value>{0} alanı, maksimum uzunluğu '{1}' olan bir dize veya dizi türü olmalıdır.</value>
    <comment>DataAnnotations: MaxLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string or array type with a minimum length of '{1}'." xml:space="preserve">
    <value>{0} alanı, minimum uzunluğu '{1}' olan bir dize veya dizi türü olmalıdır.</value>
    <comment>DataAnnotations: MinLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string with a maximum length of {1}." xml:space="preserve">
    <value>{0} alanı, maksimum uzunluğu {1} olan bir dize olmalıdır.</value>
    <comment>DataAnnotations: StringLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string with a minimum length of {2} and a maximum length of {1}." xml:space="preserve">
    <value>{0} alanı, minimum uzunluğu {2} ve maksimum uzunluğu {1} olan bir dize olmalıdır.</value>
    <comment>DataAnnotations: StringLengthAttribute_ValidationErrorIncludingMinimum</comment>
  </data>
  <data name="The field {0} must be between {1} and {2}." xml:space="preserve">
    <value>{0} alanı {1} ve {2} arasında olmalıdır.</value>
    <comment>DataAnnotations: RangeAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must match the regular expression '{1}'." xml:space="preserve">
    <value>{0} alanı, '{1}' normal ifadesiyle eşleşmelidir.</value>
    <comment>DataAnnotations: RegexAttribute_ValidationError</comment>
  </data>
  <data name="The instance provided must match the ObjectInstance on the ValidationContext supplied." xml:space="preserve">
    <value>Sağlanan örnek, sağlanan ValidationContext'teki ObjectInstance ile eşleşmelidir.</value>
    <comment>DataAnnotations: Validator_InstanceMustMatchValidationContextInstance</comment>
  </data>
  <data name="The key parameter at position {0} is null. Every key control parameter must be a string." xml:space="preserve">
    <value>{0} konumundaki anahtar parametresi boş. Her anahtar kontrol parametresi bir dize olmalıdır.</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyIsNull</comment>
  </data>
  <data name="The key parameter at position {0} with value '{1}' is not a string. Every key control parameter must be a string." xml:space="preserve">
    <value>'{1}' değerine sahip {0} konumundaki anahtar parametresi bir dize değil. Her anahtar kontrol parametresi bir dize olmalıdır.</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyIsNotAString</comment>
  </data>
  <data name="The key parameter at position {0} with value '{1}' occurs more than once." xml:space="preserve">
    <value>'{1}' değerine sahip {0} konumundaki anahtar parametresi birden fazla gerçekleşiyor.</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyOccursMoreThanOnce</comment>
  </data>
  <data name="The maximum length must be a nonnegative integer." xml:space="preserve">
    <value>Maksimum uzunluk negatif olmayan bir tamsayı olmalıdır.</value>
    <comment>DataAnnotations: StringLengthAttribute_InvalidMaxLength</comment>
  </data>
  <data name="The maximum value '{0}' must be greater than or equal to the minimum value '{1}'." xml:space="preserve">
    <value>'{0}' maksimum değeri, '{1}' minimum değerine eşit veya daha büyük olmalıdır.</value>
    <comment>DataAnnotations: RangeAttribute_MinGreaterThanMax</comment>
  </data>
  <data name="The minimum and maximum values must be set." xml:space="preserve">
    <value>Minimum ve maksimum değerler ayarlanmalıdır.</value>
    <comment>DataAnnotations: RangeAttribute_Must_Set_Min_And_Max</comment>
  </data>
  <data name="The number of control parameters must be even." xml:space="preserve">
    <value>Kontrol parametrelerinin sayısı eşit olmalıdır.</value>
    <comment>DataAnnotations: UIHintImplementation_NeedEvenNumberOfControlParameters</comment>
  </data>
  <data name="The OperandType must be set when strings are used for minimum and maximum values." xml:space="preserve">
    <value>OperandType, dizgiler minimum ve maksimum değerler için kullanıldığında ayarlanmalıdır.</value>
    <comment>DataAnnotations: RangeAttribute_Must_Set_Operand_Type</comment>
  </data>
  <data name="The pattern must be set to a valid regular expression." xml:space="preserve">
    <value>Desen geçerli bir normal ifadeye ayarlanmalıdır.</value>
    <comment>DataAnnotations: RegularExpressionAttribute_Empty_Pattern</comment>
  </data>
  <data name="The property '{0}' on resource type '{1}' is not a string type." xml:space="preserve">
    <value>'{1}' kaynak türündeki '{0}' özelliği bir dize türü değil.</value>
    <comment>DataAnnotations:ValidationAttribute_ResourcePropertyNotStringType</comment>
  </data>
  <data name="The property {0}.{1} could not be found." xml:space="preserve">
    <value>{0}. {1} özelliği bulunamadı.</value>
    <comment>DataAnnotations: Common_PropertyNotFound</comment>
  </data>
  <data name="The resource type '{0}' does not have an accessible static property named '{1}'." xml:space="preserve">
    <value>'{0}' kaynak türü '{1}' adlı erişilebilir bir statik özelliğe sahip değil.</value>
    <comment>DataAnnotations: ValidationAttribute_ResourceTypeDoesNotHaveProperty</comment>
  </data>
  <data name="The supplied value is invalid for {0}." xml:space="preserve">
    <value>'{0}' alan değeri geçerli değil</value>
    <comment>ModelBinding: ModelState_UnknownValueIsInvalid</comment>
  </data>
  <data name="The supplied value is invalid." xml:space="preserve">
    <value>Verilen değer geçerli değil</value>
    <comment>ModelBinding: ModelState_NonPropertyUnknownValueIsInvalid</comment>
  </data>
  <data name="The type '{0}' does not contain a public property named '{1}'." xml:space="preserve">
    <value>'{0}' tipi '{1}' adlı bir ortak özellik içermiyor.</value>
    <comment>DataAnnotations: AttributeStore_Unknown_Property</comment>
  </data>
  <data name="The type '{0}' needs to represent an enumeration type." xml:space="preserve">
    <value>'{0}' tipinin bir numaralandırma (enum) tipini temsil etmesi gerekir.</value>
    <comment>DataAnnotations: EnumDataTypeAttribute_TypeNeedsToBeAnEnum</comment>
  </data>
  <data name="The type provided for EnumDataTypeAttribute cannot be null." xml:space="preserve">
    <value>EnumDataTypeAttribute için sağlanan tür boş olamaz.</value>
    <comment>DataAnnotations: EnumDataTypeAttribute_TypeCannotBeNull</comment>
  </data>
  <data name="The type {0} must implement {1}." xml:space="preserve">
    <value>{0} tipi {1} uygulamalıdır.</value>
    <comment>DataAnnotations: RangeAttribute_ArbitraryTypeNotIComparable</comment>
  </data>
  <data name="The value '{0}' is invalid." xml:space="preserve">
    <value>'{0}' değeri geçerli değil</value>
    <comment>ModelBinding: HtmlGeneration_ValueIsInvalid, ModelBinding_NullValueNotValid</comment>
  </data>
  <data name="The value '{0}' is not valid for {1}." xml:space="preserve">
    <value>'{0}' değeri '{1}' alanı için geçerli değil</value>
    <comment>ModelBinding: ModelState_AttemptedValueIsInvalid</comment>
  </data>
  <data name="The value '{0}' is not valid." xml:space="preserve">
    <value>'{0}' değeri geçerli değil</value>
    <comment>ModelBinding: ModelState_NonPropertyAttemptedValueIsInvalid</comment>
  </data>
  <data name="The value for property '{0}' must be of type '{1}'." xml:space="preserve">
    <value>'{0}' özelliğinin değeri '{1}' türünde olmalıdır.</value>
    <comment>DataAnnotations: Validator_Property_Value_Wrong_Type</comment>
  </data>
  <data name="The {0} field is not a valid credit card number." xml:space="preserve">
    <value>{0} alanı geçerli bir kredi kartı numarası değil.</value>
    <comment>DataAnnotations: CreditCardAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid e-mail address." xml:space="preserve">
    <value>{0} alanı geçerli bir e-posta adresi değil.</value>
    <comment>DataAnnotations: EmailAddressAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid fully-qualified http, https, or ftp URL." xml:space="preserve">
    <value>{0} alanı geçerli bir tam nitelikli http, https veya ftp URL'si değil.</value>
    <comment>DataAnnotations: UrlAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid phone number." xml:space="preserve">
    <value>{0} alanı geçerli bir telefon numarası değil.</value>
    <comment>DataAnnotations: PhoneAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is required." xml:space="preserve">
    <value>{0} alanı zorunludur.</value>
    <comment>DataAnnotations: RequiredAttribute_ValidationError</comment>
  </data>
  <data name="The {0} field only accepts files with the following extensions: {1}" xml:space="preserve">
    <value>{0} alanı yalnızca aşağıdaki uzantılara sahip dosyaları kabul eder: {1}</value>
    <comment>DataAnnotations: FileExtensionsAttribute_Invalid</comment>
  </data>
  <data name="The {0} property has not been set.  Use the {1} method to get the value." xml:space="preserve">
    <value>{0} özelliği ayarlanmadı. Değeri elde etmek için {1} yöntemini kullanın.</value>
    <comment>DataAnnotations: DisplayAttribute_PropertyNotSet</comment>
  </data>
  <data name="User already has a password set." xml:space="preserve">
    <value>Kullanıcının bir şifresi zaten vardır.</value>
    <comment>Identity: UserAlreadyHasPassword</comment>
  </data>
  <data name="User already in role '{0}'." xml:space="preserve">
    <value>Kullanıcının zaten '{0}' rolü vardır.</value>
    <comment>Identity: UserAlreadyInRole</comment>
  </data>
  <data name="User is not in role '{0}'." xml:space="preserve">
    <value>Kullanıcının '{0}' rolü yoktur.</value>
    <comment>Identity: UserNotInRole</comment>
  </data>
  <data name="User name '{0}' is already taken." xml:space="preserve">
    <value>Kullanıcı adı '{0}' önceden kayıtlıdır</value>
    <comment>Identity: DuplicateUserName</comment>
  </data>
  <data name="User name '{0}' is invalid, can only contain letters or digits." xml:space="preserve">
    <value>Kullanıcı adı '{0}' geçerli değildir.</value>
    <comment>Identity: InvalidUserName</comment>
  </data>
  <data name="{0} is not valid." xml:space="preserve">
    <value>{0} geçerli değil.</value>
    <comment>DataAnnotations: CustomValidationAttribute_ValidationError</comment>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Şifreyi tekarla</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Eposta</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Şifre</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
</root>