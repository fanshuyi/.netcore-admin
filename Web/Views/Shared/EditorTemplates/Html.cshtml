@using System.ComponentModel.DataAnnotations
@model string

@{

    var htmlattributes = new Dictionary<string, object> { { "placeholder", HtmlLocalizer[ViewData.ModelMetadata.Description ?? ""].Value } };

    //if (ViewData.ModelMetadata.IsRequired)
    //{
    //    htmlattributes.Add("required", "required");
    //}

    var maxlength = ViewData.ModelMetadata.ContainerType.GetProperty(ViewData.ModelMetadata.PropertyName).CustomAttributes.FirstOrDefault(a => a.AttributeType == typeof(MaxLengthAttribute))?.ConstructorArguments.FirstOrDefault();

    if (maxlength != null)
    {
        htmlattributes.Add("maxlength", maxlength.Value.Value);
    }

    var minlength = ViewData.ModelMetadata.ContainerType.GetProperty(ViewData.ModelMetadata.PropertyName).CustomAttributes.FirstOrDefault(a => a.AttributeType == typeof(MinLengthAttribute))?.ConstructorArguments.FirstOrDefault();

    if (minlength != null)
    {
        htmlattributes.Add("minlength", minlength.Value.Value);
    }
}

@Html.TextAreaFor(a => a, htmlattributes)

<div>
    @htmlattributes["placeholder"]
</div>

<script>
    //var editor_@(Html.NameForModel()) = CKEDITOR.replace('@Html.NameForModel()',{});

    ClassicEditor
        .create(document.querySelector('#@Html.NameForModel()'), {
            language: 'zh-cn',
            ckfinder: {
                uploadUrl: './uploadfile?from=ckfinder'
            }
        })
    .then( editor => {
        console.log( editor );
    } )
    .catch( error => {
        console.error( error );
    } );
</script>