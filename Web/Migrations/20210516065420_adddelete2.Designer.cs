// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services;

namespace Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210516065420_adddelete2")]
    partial class adddelete2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Models.SysModels.JsonData", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonDataStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonDataType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("JsonDatas");
                });

            modelBuilder.Entity("Models.SysModels.JsonDataHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonDataStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JsonDataType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("RecordID")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("JsonDataHistorys");
                });

            modelBuilder.Entity("Models.SysModels.SysAction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("System")
                        .HasColumnType("bit");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("SysActions");
                });

            modelBuilder.Entity("Models.SysModels.SysArea", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("SysAreas");
                });

            modelBuilder.Entity("Models.SysModels.SysController", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ActionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Display")
                        .HasColumnType("bit");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Ico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parameter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SysAreaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TargetBlank")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SysAreaId");

                    b.ToTable("SysControllers");
                });

            modelBuilder.Entity("Models.SysModels.SysControllerSysAction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SysActionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SysControllerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SysActionId");

                    b.HasIndex("SysControllerId");

                    b.ToTable("SysControllerSysActions");
                });

            modelBuilder.Entity("Models.SysModels.SysDepartment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SysDepartments");
                });

            modelBuilder.Entity("Models.SysModels.SysDepartmentSysUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SysDepartmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SysUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SysDepartmentId");

                    b.HasIndex("SysUserId");

                    b.ToTable("SysDepartmentSysUsers");
                });

            modelBuilder.Entity("Models.SysModels.SysHelp", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("SysHelpClassId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SysHelpClassId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SysHelps");
                });

            modelBuilder.Entity("Models.SysModels.SysHelpClass", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SysHelpClasses");
                });

            modelBuilder.Entity("Models.SysModels.SysLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Log")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("IsDeleted");

                    b.ToTable("SysLogs");
                });

            modelBuilder.Entity("Models.SysModels.SysMessageCenter", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("AbsoluteExpirationUtcDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddresseeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SysMessageCenters");
                });

            modelBuilder.Entity("Models.SysModels.SysMessageReceived", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SysMessageId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("SysMessageId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SysMessageReceiveds");
                });

            modelBuilder.Entity("Models.SysModels.SysRoleSysControllerSysAction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SysControllerSysActionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.HasIndex("SysControllerSysActionId");

                    b.ToTable("SysRoleSysControllerSysActions");
                });

            modelBuilder.Entity("Models.SysModels.SysUserLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("ActionDuration")
                        .HasColumnType("float");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Ip")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RecordId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SysAction")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SysArea")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SysController")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Url")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double>("ViewDuration")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("SysUserLogs");
                });

            modelBuilder.Entity("Models.TaskModels.TaskCenter", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ActualEndTime")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleEndTime")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("TaskExecutorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CreatedDateTime");

                    b.HasIndex("DeleteBy");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("TaskExecutorId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TaskCenters");
                });

            modelBuilder.Entity("Models.UserModels.DomainLabel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DeleteDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Heat")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LabelType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DomainLabels");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.SysModels.JsonData", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.JsonDataHistory", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysController", b =>
                {
                    b.HasOne("Models.SysModels.SysArea", "SysArea")
                        .WithMany("SysControllers")
                        .HasForeignKey("SysAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysArea");
                });

            modelBuilder.Entity("Models.SysModels.SysControllerSysAction", b =>
                {
                    b.HasOne("Models.SysModels.SysAction", "SysAction")
                        .WithMany("SysControllerSysActions")
                        .HasForeignKey("SysActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.SysModels.SysController", "SysController")
                        .WithMany("SysControllerSysActions")
                        .HasForeignKey("SysControllerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysAction");

                    b.Navigation("SysController");
                });

            modelBuilder.Entity("Models.SysModels.SysDepartment", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysDepartmentSysUser", b =>
                {
                    b.HasOne("Models.SysModels.SysDepartment", "SysDepartment")
                        .WithMany("SysDepartmentSysUsers")
                        .HasForeignKey("SysDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("SysUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SysDepartment");

                    b.Navigation("SysUser");
                });

            modelBuilder.Entity("Models.SysModels.SysHelp", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Models.SysModels.SysHelpClass", "SysHelpClass")
                        .WithMany("SysHelps")
                        .HasForeignKey("SysHelpClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("SysHelpClass");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysHelpClass", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysMessageCenter", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysMessageReceived", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Models.SysModels.SysMessageCenter", "SysMessage")
                        .WithMany("SysMessageReceiveds")
                        .HasForeignKey("SysMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("SysMessage");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysRoleSysControllerSysAction", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.SysModels.SysControllerSysAction", "SysControllerSysAction")
                        .WithMany("SysRoleSysControllerSysActions")
                        .HasForeignKey("SysControllerSysActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityRole");

                    b.Navigation("SysControllerSysAction");
                });

            modelBuilder.Entity("Models.SysModels.SysUserLog", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.TaskModels.TaskCenter", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserDeleteBy")
                        .WithMany()
                        .HasForeignKey("DeleteBy");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "TaskExecutor")
                        .WithMany()
                        .HasForeignKey("TaskExecutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "UserUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");

                    b.Navigation("TaskExecutor");

                    b.Navigation("UserCreatedBy");

                    b.Navigation("UserDeleteBy");

                    b.Navigation("UserUpdatedBy");
                });

            modelBuilder.Entity("Models.SysModels.SysAction", b =>
                {
                    b.Navigation("SysControllerSysActions");
                });

            modelBuilder.Entity("Models.SysModels.SysArea", b =>
                {
                    b.Navigation("SysControllers");
                });

            modelBuilder.Entity("Models.SysModels.SysController", b =>
                {
                    b.Navigation("SysControllerSysActions");
                });

            modelBuilder.Entity("Models.SysModels.SysControllerSysAction", b =>
                {
                    b.Navigation("SysRoleSysControllerSysActions");
                });

            modelBuilder.Entity("Models.SysModels.SysDepartment", b =>
                {
                    b.Navigation("SysDepartmentSysUsers");
                });

            modelBuilder.Entity("Models.SysModels.SysHelpClass", b =>
                {
                    b.Navigation("SysHelps");
                });

            modelBuilder.Entity("Models.SysModels.SysMessageCenter", b =>
                {
                    b.Navigation("SysMessageReceiveds");
                });
#pragma warning restore 612, 618
        }
    }
}
