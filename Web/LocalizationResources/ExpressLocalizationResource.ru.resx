<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A non-empty request body is required." xml:space="preserve">
    <value>Требуется непустое тело запроса.</value>
    <comment>ModelBinding: ModelBinding_MissingRequestBodyRequiredMember</comment>
  </data>
  <data name="A user with this login already exists." xml:space="preserve">
    <value>Пользователь с таким логином уже существует.</value>
    <comment>Identity: LoginAlreadyAssociated</comment>
  </data>
  <data name="A value for the '{0}' parameter or property was not provided." xml:space="preserve">
    <value>не было представлено значение для «{0}» параметра или свойства.</value>
    <comment>ModelBinding: ModelBinding_MissingBindRequiredMember</comment>
  </data>
  <data name="A value is required." xml:space="preserve">
    <value>Требуется значение.</value>
    <comment>ModelBinding: KeyValuePair_BothKeyAndValueMustBePresent</comment>
  </data>
  <data name="An unknown failure has occurred." xml:space="preserve">
    <value>Неизвестная авария произошла.</value>
    <comment>Identity: DefaultError</comment>
  </data>
  <data name="Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute." xml:space="preserve">
    <value>Оба ErrorMessageResourceType и ErrorMessageResourceName должны быть установлены в этом атрибуте.</value>
    <comment>DataAnnotations: ValidationAttribute_NeedBothResourceTypeAndResourceName</comment>
  </data>
  <data name="Cannot retrieve property '{0}' because localization failed.  Type '{1}' is not public or does not contain a public static string property with the name '{2}'." xml:space="preserve">
    <value>Невозможно получить свойство «{0}», потому что локализация не удалось. Тип «{1}» не является общедоступной или не содержит публичный статический строковое свойство с именем «{2}».</value>
    <comment>DataAnnotations: LocalizableString_LocalizationFailed</comment>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>Подтвердите Пароль</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Could not convert the value of type '{0}' to '{1}' as expected by method {2}.{3}." xml:space="preserve">
    <value>Не удалось преобразовать значение типа '{0}' в '{1}', как ожидалось по методу {2}. {3}.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Type_Conversion_Failed</comment>
  </data>
  <data name="Could not find a property named {0}." xml:space="preserve">
    <value>Не удалось найти свойство с именем {0}.</value>
    <comment>DataAnnotations: CompareAttribute_UnknownProperty</comment>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Either ErrorMessageString or ErrorMessageResourceName must be set, but not both." xml:space="preserve">
    <value>Либо ErrorMessageString или ErrorMessageResourceName должен быть установлен, но не оба.</value>
    <comment>DataAnnotations: ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Эл. адрес</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Email '{0}' is already taken." xml:space="preserve">
    <value>Отправить «{0}» уже принято.</value>
    <comment>Identity: DuplicateEmail</comment>
  </data>
  <data name="Email '{0}' is invalid." xml:space="preserve">
    <value>Отправить '{0}' является недействительным.</value>
    <comment>Identity: InvalidEmail</comment>
  </data>
  <data name="ID" xml:space="preserve">
    <value>Я БЫ</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Incorrect password." xml:space="preserve">
    <value>Неверный пароль.</value>
    <comment>Identity: PasswordMismatch</comment>
  </data>
  <data name="Invalid token." xml:space="preserve">
    <value>Недопустимый маркер.</value>
    <comment>Identity: InvalidToken</comment>
  </data>
  <data name="IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context)." xml:space="preserve">
    <value>IsValid (значение объекта) не был реализован этим классом. Предпочтительная точка входа GetValidationResult () и классы должны переопределить IsValid (значение объекта, ValidationContext контекст).</value>
    <comment>DataAnnotations: ValidationAttribute_IsValid_NotImplemented</comment>
  </data>
  <data name="Lockout is not enabled for this user." xml:space="preserve">
    <value>Блокировка не включена для этого пользователя.</value>
    <comment>Identity: UserLockoutNotEnabled</comment>
  </data>
  <data name="MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length." xml:space="preserve">
    <value>MaxLengthAttribute должен иметь значение длины, которое больше нуля. Используйте MaxLength () без параметров, чтобы указать, что строка или массив может иметь максимально допустимую длину.</value>
    <comment>DataAnnotations: MaxLengthAttribute_InvalidMaxLength</comment>
  </data>
  <data name="MetadataClassType cannot be null." xml:space="preserve">
    <value>MetadataClassType не может быть пустым.</value>
    <comment>DataAnnotations: MetadataTypeAttribute_TypeCannotBeNull</comment>
  </data>
  <data name="MinLengthAttribute must have a Length value that is zero or greater." xml:space="preserve">
    <value>MinLengthAttribute должен иметь значение длины, что равен нулю или больше.</value>
    <comment>DataAnnotations: MinLengthAttribute_InvalidMinLength</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>название</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Optimistic concurrency failure, object has been modified." xml:space="preserve">
    <value>Отказ Оптимистичный параллелизм, объект был изменен.</value>
    <comment>Identity : ConcurrencyFailure</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>пароль</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Passwords must be at least {0} characters." xml:space="preserve">
    <value>Пароли должны быть по крайней мере {0} символов.</value>
    <comment>Identity: PasswordTooShort</comment>
  </data>
  <data name="Passwords must have at least one digit ('0'-'9')." xml:space="preserve">
    <value>Пароли должны иметь по крайней мере одну цифру ( «0» - «9»).</value>
    <comment>Identity: PasswordRequiresDigit</comment>
  </data>
  <data name="Passwords must have at least one lowercase ('a'-'z')." xml:space="preserve">
    <value>Пароли должны иметь по крайней мере, один нижний регистр ( «A» - «Z»).</value>
    <comment>Identity: PasswordRequiresLower</comment>
  </data>
  <data name="Passwords must have at least one non alphanumeric character." xml:space="preserve">
    <value>Пароли должны иметь по крайней мере один не алфавитно-цифровой символ.</value>
    <comment>Identity: PasswordRequiresNonAlphanumeric</comment>
  </data>
  <data name="Passwords must have at least one uppercase ('A'-'Z')." xml:space="preserve">
    <value>Пароли должны иметь по меньшей мере один верхний регистр ( «A» - «Z»).</value>
    <comment>Identity: PasswordRequiresUpper</comment>
  </data>
  <data name="Passwords must use at least {0} different characters." xml:space="preserve">
    <value>Пароли должны использовать по крайней мере {0} различных символов.</value>
    <comment>Identity: PasswordRequiresUniqueChars</comment>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Цена</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Recovery code redemption failed." xml:space="preserve">
    <value>Восстановление код выкуп не удался.</value>
    <comment>Identity: RecoveryCodeRedemptionFailed</comment>
  </data>
  <data name="Role name '{0}' is already taken." xml:space="preserve">
    <value>Имя роли «{0}» уже принято.</value>
    <comment>Identity: DuplicateRoleName</comment>
  </data>
  <data name="Role name '{0}' is invalid." xml:space="preserve">
    <value>Имя роли «{0}» является недействительным.</value>
    <comment>Identity: InvalidRoleName</comment>
  </data>
  <data name="The argument '{0}' cannot be null, empty or contain only whitespace." xml:space="preserve">
    <value>Аргумент «{0}» не может быть пустым, пустым или содержать только пробелы.</value>
    <comment>DataAnnotations: ArgumentIsNullOrWhitespace</comment>
  </data>
  <data name="The associated metadata type for type '{0}' contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type." xml:space="preserve">
    <value>Соответствующий тип метаданных для типа «{0}» содержит следующие неизвестные свойства или полей: {1}. Пожалуйста, убедитесь, что имена этих членов совпадают с именами свойств на основном виде.</value>
    <comment>DataAnnotations: AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties</comment>
  </data>
  <data name="The custom DataType string cannot be null or empty." xml:space="preserve">
    <value>Строка пользовательских DataType не может быть нулевой или пустой.</value>
    <comment>DataAnnotations: DataTypeAttribute_EmptyDataTypeString</comment>
  </data>
  <data name="The custom validation type '{0}' must be public." xml:space="preserve">
    <value>Пользовательский тип проверки «{0}» должен быть публичным.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Type_Must_Be_Public</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' does not exist in type '{1}' or is not public and static." xml:space="preserve">
    <value>Метод CustomValidationAttribute «{0}» не существует в типа «{1}» или не является общедоступной и статическим.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Not_Found</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' in type '{1}' must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional." xml:space="preserve">
    <value>Метод CustomValidationAttribute '{0}' по типу '{1}' должен соответствовать ожидаемому подпись: публичный статический ValidationResult {0} (значение объекта, ValidationContext контекст). Значение может быть сильно типизированных. Параметр ValidationContext является необязательным.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Signature</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' in type '{1}' must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success." xml:space="preserve">
    <value>Метод CustomValidationAttribute '{0}' по типу '{1}' должен вернуть System.ComponentModel.DataAnnotations.ValidationResult. Используйте System.ComponentModel.DataAnnotations.ValidationResult.Success для представления успеха.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Must_Return_ValidationResult</comment>
  </data>
  <data name="The CustomValidationAttribute.Method was not specified." xml:space="preserve">
    <value>CustomValidationAttribute.Method не был указан.</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Required</comment>
  </data>
  <data name="The CustomValidationAttribute.ValidatorType was not specified." xml:space="preserve">
    <value>CustomValidationAttribute.ValidatorType не был указан.</value>
    <comment>DataAnnotations: CustomValidationAttribute_ValidatorType_Required</comment>
  </data>
  <data name="The field must be a number." xml:space="preserve">
    <value>Поле должно быть числом.</value>
    <comment>ModelBinding: HtmlGeneration_NonPropertyValueMustBeNumber</comment>
  </data>
  <data name="The field of type {0} must be a string, array or ICollection type." xml:space="preserve">
    <value>Поле типа {0} должна быть строка, массив или тип ICollection.</value>
    <comment>DataAnnotations: LengthAttribute_InvalidValueType</comment>
  </data>
  <data name="The field {0} is invalid." xml:space="preserve">
    <value>Поле {0} является недопустимым.</value>
    <comment>DataAnnotations: ValidationAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a number." xml:space="preserve">
    <value>Поле {0} должно быть числом.</value>
    <comment>ModelBinding: HtmlGeneration_ValueMustBeNumber</comment>
  </data>
  <data name="The field {0} must be a string or array type with a maximum length of '{1}'." xml:space="preserve">
    <value>Поле {0} должно быть строка или массив типа с максимальной длиной «{1}».</value>
    <comment>DataAnnotations: MaxLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string or array type with a minimum length of '{1}'." xml:space="preserve">
    <value>Поле {0} должно быть строка или массив типа с минимальной длиной «{1}».</value>
    <comment>DataAnnotations: MinLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string with a maximum length of {1}." xml:space="preserve">
    <value>Поле {0} должна быть строка с максимальной длиной {1}.</value>
    <comment>DataAnnotations: StringLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string with a minimum length of {2} and a maximum length of {1}." xml:space="preserve">
    <value>Поле {0} должно быть строка с минимальной длиной {2} и максимальной длиной {1}.</value>
    <comment>DataAnnotations: StringLengthAttribute_ValidationErrorIncludingMinimum</comment>
  </data>
  <data name="The field {0} must be between {1} and {2}." xml:space="preserve">
    <value>Поле {0} должно быть между {1} ​​и {2}.</value>
    <comment>DataAnnotations: RangeAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must match the regular expression '{1}'." xml:space="preserve">
    <value>Поле {0} должно соответствовать регулярному выражению «{1}».</value>
    <comment>DataAnnotations: RegexAttribute_ValidationError</comment>
  </data>
  <data name="The instance provided must match the ObjectInstance on the ValidationContext supplied." xml:space="preserve">
    <value>Экземпляр при условии, должен соответствовать ObjectInstance на ValidationContext поставки.</value>
    <comment>DataAnnotations: Validator_InstanceMustMatchValidationContextInstance</comment>
  </data>
  <data name="The key parameter at position {0} is null. Every key control parameter must be a string." xml:space="preserve">
    <value>Ключевой параметр в позиции {0} равен нуль. Каждый ключевой параметр управления должен быть строкой.</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyIsNull</comment>
  </data>
  <data name="The key parameter at position {0} with value '{1}' is not a string. Every key control parameter must be a string." xml:space="preserve">
    <value>Ключевой параметр в позиции {0} со значением «{1}» не является строкой. Каждый ключевой параметр управления должен быть строкой.</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyIsNotAString</comment>
  </data>
  <data name="The key parameter at position {0} with value '{1}' occurs more than once." xml:space="preserve">
    <value>Ключевой параметр в позиции {0} со значением «{1}» встречается более чем один раз.</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyOccursMoreThanOnce</comment>
  </data>
  <data name="The maximum length must be a nonnegative integer." xml:space="preserve">
    <value>Максимальная длина должна быть неотрицательным целым числом.</value>
    <comment>DataAnnotations: StringLengthAttribute_InvalidMaxLength</comment>
  </data>
  <data name="The maximum value '{0}' must be greater than or equal to the minimum value '{1}'." xml:space="preserve">
    <value>Максимальное значение «{0}» должно быть больше или равно минимальному значению «{1}».</value>
    <comment>DataAnnotations: RangeAttribute_MinGreaterThanMax</comment>
  </data>
  <data name="The minimum and maximum values must be set." xml:space="preserve">
    <value>Минимальные и максимальные значения должны быть установлены.</value>
    <comment>DataAnnotations: RangeAttribute_Must_Set_Min_And_Max</comment>
  </data>
  <data name="The number of control parameters must be even." xml:space="preserve">
    <value>Количество управляющих параметров должно быть четным.</value>
    <comment>DataAnnotations: UIHintImplementation_NeedEvenNumberOfControlParameters</comment>
  </data>
  <data name="The OperandType must be set when strings are used for minimum and maximum values." xml:space="preserve">
    <value>OperandType должен быть установлен, когда строки используются для минимальных и максимальных значений.</value>
    <comment>DataAnnotations: RangeAttribute_Must_Set_Operand_Type</comment>
  </data>
  <data name="The pattern must be set to a valid regular expression." xml:space="preserve">
    <value>Шаблон должен быть установлен действительный регулярное выражение.</value>
    <comment>DataAnnotations: RegularExpressionAttribute_Empty_Pattern</comment>
  </data>
  <data name="The property '{0}' on resource type '{1}' is not a string type." xml:space="preserve">
    <value>Свойство «{0}» на тип ресурса «{1}» не строковый тип.</value>
    <comment>DataAnnotations:ValidationAttribute_ResourcePropertyNotStringType</comment>
  </data>
  <data name="The property {0}.{1} could not be found." xml:space="preserve">
    <value>Свойство {0}. {1} не может быть найден.</value>
    <comment>DataAnnotations: Common_PropertyNotFound</comment>
  </data>
  <data name="The resource type '{0}' does not have an accessible static property named '{1}'." xml:space="preserve">
    <value>Тип ресурса «{0}» не имеет доступного статическое свойство с именем «{1}».</value>
    <comment>DataAnnotations: ValidationAttribute_ResourceTypeDoesNotHaveProperty</comment>
  </data>
  <data name="The supplied value is invalid for {0}." xml:space="preserve">
    <value>Производимое значение является недопустимым для {0}.</value>
    <comment>ModelBinding: ModelState_UnknownValueIsInvalid</comment>
  </data>
  <data name="The supplied value is invalid." xml:space="preserve">
    <value>Производимое значение является недействительным.</value>
    <comment>ModelBinding: ModelState_NonPropertyUnknownValueIsInvalid</comment>
  </data>
  <data name="The type '{0}' does not contain a public property named '{1}'." xml:space="preserve">
    <value>Типа «{0}» не содержит открытое свойство с именем «{1}».</value>
    <comment>DataAnnotations: AttributeStore_Unknown_Property</comment>
  </data>
  <data name="The type '{0}' needs to represent an enumeration type." xml:space="preserve">
    <value>Типа «{0}» должен представлять тип перечисления.</value>
    <comment>DataAnnotations: EnumDataTypeAttribute_TypeNeedsToBeAnEnum</comment>
  </data>
  <data name="The type provided for EnumDataTypeAttribute cannot be null." xml:space="preserve">
    <value>Тип предусмотрено EnumDataTypeAttribute не может быть пустым.</value>
    <comment>DataAnnotations: EnumDataTypeAttribute_TypeCannotBeNull</comment>
  </data>
  <data name="The type {0} must implement {1}." xml:space="preserve">
    <value>Тип {0} должен реализовывать {1}.</value>
    <comment>DataAnnotations: RangeAttribute_ArbitraryTypeNotIComparable</comment>
  </data>
  <data name="The value '{0}' is invalid." xml:space="preserve">
    <value>Значение «{0}» является недействительным.</value>
    <comment>ModelBinding: HtmlGeneration_ValueIsInvalid, ModelBinding_NullValueNotValid</comment>
  </data>
  <data name="The value '{0}' is not valid for {1}." xml:space="preserve">
    <value>Значение '{0}' не является допустимым для {1}.</value>
    <comment>ModelBinding: ModelState_AttemptedValueIsInvalid</comment>
  </data>
  <data name="The value '{0}' is not valid." xml:space="preserve">
    <value>Значение «{0}» не является допустимым.</value>
    <comment>ModelBinding: ModelState_NonPropertyAttemptedValueIsInvalid</comment>
  </data>
  <data name="The value for property '{0}' must be of type '{1}'." xml:space="preserve">
    <value>Значение свойства «{0}» должен быть типа «{1}».</value>
    <comment>DataAnnotations: Validator_Property_Value_Wrong_Type</comment>
  </data>
  <data name="The {0} field is not a valid credit card number." xml:space="preserve">
    <value>{0} поле не является допустимым номер кредитной карты.</value>
    <comment>DataAnnotations: CreditCardAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid e-mail address." xml:space="preserve">
    <value>{0} поле не является действительным адресом электронной почты.</value>
    <comment>DataAnnotations: EmailAddressAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid fully-qualified http, https, or ftp URL." xml:space="preserve">
    <value>{0} поле не является действительным полностью квалифицированное HTTP, HTTPS, FTP или URL.</value>
    <comment>DataAnnotations: UrlAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid phone number." xml:space="preserve">
    <value>{0} поле не является допустимым номером телефона.</value>
    <comment>DataAnnotations: PhoneAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is required." xml:space="preserve">
    <value>требуется {0} поле.</value>
    <comment>DataAnnotations: RequiredAttribute_ValidationError</comment>
  </data>
  <data name="The {0} field only accepts files with the following extensions: {1}" xml:space="preserve">
    <value>{0} поле принимает только файлы со следующими расширениями: {1}</value>
    <comment>DataAnnotations: FileExtensionsAttribute_Invalid</comment>
  </data>
  <data name="The {0} property has not been set.  Use the {1} method to get the value." xml:space="preserve">
    <value>{0} свойство не было установлено. С помощью метода {1}, чтобы получить значение.</value>
    <comment>DataAnnotations: DisplayAttribute_PropertyNotSet</comment>
  </data>
  <data name="User already has a password set." xml:space="preserve">
    <value>Пользователь уже имеет набор пароля.</value>
    <comment>Identity: UserAlreadyHasPassword</comment>
  </data>
  <data name="User already in role '{0}'." xml:space="preserve">
    <value>Пользователь уже в роли «{0}».</value>
    <comment>Identity: UserAlreadyInRole</comment>
  </data>
  <data name="User is not in role '{0}'." xml:space="preserve">
    <value>Пользователь не в роли «{0}».</value>
    <comment>Identity: UserNotInRole</comment>
  </data>
  <data name="User name '{0}' is already taken." xml:space="preserve">
    <value>Имя пользователя «{0}» уже принято.</value>
    <comment>Identity: DuplicateUserName</comment>
  </data>
  <data name="User name '{0}' is invalid, can only contain letters or digits." xml:space="preserve">
    <value>Имя пользователя «{0}» является недействительным, может содержать только букву или цифру.</value>
    <comment>Identity: InvalidUserName</comment>
  </data>
  <data name="{0} is not valid." xml:space="preserve">
    <value>{0} не является действительным.</value>
    <comment>DataAnnotations: CustomValidationAttribute_ValidationError</comment>
  </data>
  <data name="'{0}' and '{1}' do not match." xml:space="preserve">
    <value>'{0}' и '{1}' не совпадают.</value>
    <comment>DataAnnotations: CompareAttribute_MustMatch</comment>
  </data>
</root>