@using System.Linq
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@using Models.SysModels
@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a asp-action="Index" class="nav-link @ManageNavPages.IndexNavClass(ViewContext)">@HtmlLocalizer["Profile"]</a></li>
    <li class="nav-item"><a asp-action="ChangePassword" class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)">@HtmlLocalizer["ChangePassword"]</a></li>
    @if (hasExternalLogins)
    {
        <li class="nav-item"><a asp-action="ExternalLogins" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)">@HtmlLocalizer["ExternalLogins"]</a></li>
    }
    @*<li class="nav-item"><a asp-action="TwoFactorAuthentication" class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)">@HtmlLocalizer["TwoFactorAuthentication"]</a></li>*@
    <li class="nav-item"><a asp-action="Logout" asp-controller="Account" class="nav-link">@HtmlLocalizer["Logout"]</a></li>
</ul>