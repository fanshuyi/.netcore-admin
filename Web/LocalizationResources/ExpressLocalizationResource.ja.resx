<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="A non-empty request body is required." xml:space="preserve">
    <value>非空のリクエストボディが必要です。</value>
    <comment>ModelBinding: ModelBinding_MissingRequestBodyRequiredMember</comment>
  </data>
  <data name="A user with this login already exists." xml:space="preserve">
    <value>このログインを持つユーザーが既に存在しています。</value>
    <comment>Identity: LoginAlreadyAssociated</comment>
  </data>
  <data name="A value for the '{0}' parameter or property was not provided." xml:space="preserve">
    <value>「{0}」パラメータまたはプロパティの値が提供されませんでした。</value>
    <comment>ModelBinding: ModelBinding_MissingBindRequiredMember</comment>
  </data>
  <data name="A value is required." xml:space="preserve">
    <value>値が必要とされます。</value>
    <comment>ModelBinding: KeyValuePair_BothKeyAndValueMustBePresent</comment>
  </data>
  <data name="An unknown failure has occurred." xml:space="preserve">
    <value>不明なエラーが発生しました。</value>
    <comment>Identity: DefaultError</comment>
  </data>
  <data name="Both ErrorMessageResourceType and ErrorMessageResourceName need to be set on this attribute." xml:space="preserve">
    <value>ErrorMessageResourceTypeとErrorMessageResourceNameの両方が、この属性に設定する必要があります。</value>
    <comment>DataAnnotations: ValidationAttribute_NeedBothResourceTypeAndResourceName</comment>
  </data>
  <data name="Cannot retrieve property '{0}' because localization failed.  Type '{1}' is not public or does not contain a public static string property with the name '{2}'." xml:space="preserve">
    <value>局在が失敗したため、「{0}」プロパティを取得できません。型「{1}」パブリックないか、または名前のパブリック静的文字列プロパティが含まれていません '{2}。</value>
    <comment>DataAnnotations: LocalizableString_LocalizationFailed</comment>
  </data>
  <data name="Confirm password" xml:space="preserve">
    <value>パスワードを認証する</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Could not convert the value of type '{0}' to '{1}' as expected by method {2}.{3}." xml:space="preserve">
    <value>メソッド{2}によって予想されるように '{1}' に '{0}' 型の値を変換できませんでした。{3}。</value>
    <comment>DataAnnotations: CustomValidationAttribute_Type_Conversion_Failed</comment>
  </data>
  <data name="Could not find a property named {0}." xml:space="preserve">
    <value>{0}という名前のプロパティが見つかりませんでした。</value>
    <comment>DataAnnotations: CompareAttribute_UnknownProperty</comment>
  </data>
  <data name="Date" xml:space="preserve">
    <value>日付</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Either ErrorMessageString or ErrorMessageResourceName must be set, but not both." xml:space="preserve">
    <value>ErrorMessageStringまたはErrorMessageResourceNameどちらかは、両方の設定ではなく、しなければなりません。</value>
    <comment>DataAnnotations: ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Eメール</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Email '{0}' is already taken." xml:space="preserve">
    <value>メール「{0}」は既に取られます。</value>
    <comment>Identity: DuplicateEmail</comment>
  </data>
  <data name="Email '{0}' is invalid." xml:space="preserve">
    <value>メールは、 '{0}' は無効です。</value>
    <comment>Identity: InvalidEmail</comment>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Incorrect password." xml:space="preserve">
    <value>誤ったパスワード。</value>
    <comment>Identity: PasswordMismatch</comment>
  </data>
  <data name="Invalid token." xml:space="preserve">
    <value>無効なトークン。</value>
    <comment>Identity: InvalidToken</comment>
  </data>
  <data name="IsValid(object value) has not been implemented by this class.  The preferred entry point is GetValidationResult() and classes should override IsValid(object value, ValidationContext context)." xml:space="preserve">
    <value>IsValidの（オブジェクトの値）は、このクラスによって実装されていません。好適なエントリポイントはGetValidationResult（）とクラスはIsValidの（オブジェクト値、ValidationContextコンテキスト）をオーバーライドする必要があります。</value>
    <comment>DataAnnotations: ValidationAttribute_IsValid_NotImplemented</comment>
  </data>
  <data name="Lockout is not enabled for this user." xml:space="preserve">
    <value>ロックアウトは、このユーザーに対して有効になっていません。</value>
    <comment>Identity: UserLockoutNotEnabled</comment>
  </data>
  <data name="MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length." xml:space="preserve">
    <value>MaxLengthAttributeはゼロより大きい長さの値を持っている必要があります。文字列またはアレイが最大許容長さを有することができることを示すために、パラメータなしのMaxLength（）を使用します。</value>
    <comment>DataAnnotations: MaxLengthAttribute_InvalidMaxLength</comment>
  </data>
  <data name="MetadataClassType cannot be null." xml:space="preserve">
    <value>MetadataClassTypeはnullにすることはできません。</value>
    <comment>DataAnnotations: MetadataTypeAttribute_TypeCannotBeNull</comment>
  </data>
  <data name="MinLengthAttribute must have a Length value that is zero or greater." xml:space="preserve">
    <value>MinLengthAttributeはゼロ以上の長さの値を持っている必要があります。</value>
    <comment>DataAnnotations: MinLengthAttribute_InvalidMinLength</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Optimistic concurrency failure, object has been modified." xml:space="preserve">
    <value>オプティミスティック同時実行の失敗は、オブジェクトが変更されました。</value>
    <comment>Identity : ConcurrencyFailure</comment>
  </data>
  <data name="Password" xml:space="preserve">
    <value>パスワード</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Passwords must be at least {0} characters." xml:space="preserve">
    <value>パスワードは、少なくとも{0}文字でなければなりません。</value>
    <comment>Identity: PasswordTooShort</comment>
  </data>
  <data name="Passwords must have at least one digit ('0'-'9')." xml:space="preserve">
    <value>パスワードは少なくとも1桁（ - 「9」、「0」）を持っている必要があります。</value>
    <comment>Identity: PasswordRequiresDigit</comment>
  </data>
  <data name="Passwords must have at least one lowercase ('a'-'z')." xml:space="preserve">
    <value>パスワードは、少なくとも一つの小文字（ -  Z「」「A」）を有していなければなりません。</value>
    <comment>Identity: PasswordRequiresLower</comment>
  </data>
  <data name="Passwords must have at least one non alphanumeric character." xml:space="preserve">
    <value>パスワードには少なくとも1つの非英数字を持っている必要があります。</value>
    <comment>Identity: PasswordRequiresNonAlphanumeric</comment>
  </data>
  <data name="Passwords must have at least one uppercase ('A'-'Z')." xml:space="preserve">
    <value>パスワードは、少なくとも一つの大文字（ - 「Z」「A」）を有していなければなりません。</value>
    <comment>Identity: PasswordRequiresUpper</comment>
  </data>
  <data name="Passwords must use at least {0} different characters." xml:space="preserve">
    <value>パスワードは、少なくとも{0}異なる文字を使用しなければなりません。</value>
    <comment>Identity: PasswordRequiresUniqueChars</comment>
  </data>
  <data name="Price" xml:space="preserve">
    <value>価格</value>
    <comment>DataAnnotations: Custom value</comment>
  </data>
  <data name="Recovery code redemption failed." xml:space="preserve">
    <value>回復コードの償還に失敗しました。</value>
    <comment>Identity: RecoveryCodeRedemptionFailed</comment>
  </data>
  <data name="Role name '{0}' is already taken." xml:space="preserve">
    <value>ロール名「{0}」は既に取られます。</value>
    <comment>Identity: DuplicateRoleName</comment>
  </data>
  <data name="Role name '{0}' is invalid." xml:space="preserve">
    <value>ロール名は「{0}」は無効です。</value>
    <comment>Identity: InvalidRoleName</comment>
  </data>
  <data name="The argument '{0}' cannot be null, empty or contain only whitespace." xml:space="preserve">
    <value>引数は、「{0}」が空、ヌルであるかのみ空白を含めることはできません。</value>
    <comment>DataAnnotations: ArgumentIsNullOrWhitespace</comment>
  </data>
  <data name="The associated metadata type for type '{0}' contains the following unknown properties or fields: {1}. Please make sure that the names of these members match the names of the properties on the main type." xml:space="preserve">
    <value>タイプの関連メタデータタイプ「{0}」は、以下の未知のプロパティまたはフィールドが含まれています：{1}。これらのメンバーの名前は、メイン・タイプのプロパティの名前と一致していることを確認してください。</value>
    <comment>DataAnnotations: AssociatedMetadataTypeTypeDescriptor_MetadataTypeContainsUnknownProperties</comment>
  </data>
  <data name="The custom DataType string cannot be null or empty." xml:space="preserve">
    <value>カスタムデータ型の文字列がnullまたは空にすることはできません。</value>
    <comment>DataAnnotations: DataTypeAttribute_EmptyDataTypeString</comment>
  </data>
  <data name="The custom validation type '{0}' must be public." xml:space="preserve">
    <value>カスタム検証型「{0}」はパブリックでなければなりません。</value>
    <comment>DataAnnotations: CustomValidationAttribute_Type_Must_Be_Public</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' does not exist in type '{1}' or is not public and static." xml:space="preserve">
    <value>CustomValidationAttribute方法は、「{0}」型に存在しない「{1}」又は公衆及び静的ではありません。</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Not_Found</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' in type '{1}' must match the expected signature: public static ValidationResult {0}(object value, ValidationContext context).  The value can be strongly typed.  The ValidationContext parameter is optional." xml:space="preserve">
    <value>パブリック静的ValidationResult {0}（オブジェクト値、ValidationContextコンテキスト）：タイプCustomValidationAttributeメソッド '{0}' '{1}' が期待シグネチャと一致しなければなりません。値は、強く型付けすることができます。 ValidationContextパラメータはオプションです。</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Signature</comment>
  </data>
  <data name="The CustomValidationAttribute method '{0}' in type '{1}' must return System.ComponentModel.DataAnnotations.ValidationResult.  Use System.ComponentModel.DataAnnotations.ValidationResult.Success to represent success." xml:space="preserve">
    <value>CustomValidationAttributeメソッドタイプ '{0}' '{1}' System.ComponentModel.DataAnnotations.ValidationResultを返さなければなりません。成功を表すためにSystem.ComponentModel.DataAnnotations.ValidationResult.Successを使用してください。</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Must_Return_ValidationResult</comment>
  </data>
  <data name="The CustomValidationAttribute.Method was not specified." xml:space="preserve">
    <value>CustomValidationAttribute.Methodが指定されていません。</value>
    <comment>DataAnnotations: CustomValidationAttribute_Method_Required</comment>
  </data>
  <data name="The CustomValidationAttribute.ValidatorType was not specified." xml:space="preserve">
    <value>CustomValidationAttribute.ValidatorTypeが指定されていません。</value>
    <comment>DataAnnotations: CustomValidationAttribute_ValidatorType_Required</comment>
  </data>
  <data name="The field must be a number." xml:space="preserve">
    <value>フィールドは数字でなければなりません。</value>
    <comment>ModelBinding: HtmlGeneration_NonPropertyValueMustBeNumber</comment>
  </data>
  <data name="The field of type {0} must be a string, array or ICollection type." xml:space="preserve">
    <value>タイプ{0}のフィールドは、文字列、アレイ又はいるICollectionタイプでなければなりません。</value>
    <comment>DataAnnotations: LengthAttribute_InvalidValueType</comment>
  </data>
  <data name="The field {0} is invalid." xml:space="preserve">
    <value>フィールド{0}は無効です。</value>
    <comment>DataAnnotations: ValidationAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a number." xml:space="preserve">
    <value>フィールド{0}は数値でなければなりません。</value>
    <comment>ModelBinding: HtmlGeneration_ValueMustBeNumber</comment>
  </data>
  <data name="The field {0} must be a string or array type with a maximum length of '{1}'." xml:space="preserve">
    <value>フィールド{0} {1}の最大長ストリング、または配列型でなければなりません。</value>
    <comment>DataAnnotations: MaxLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string or array type with a minimum length of '{1}'." xml:space="preserve">
    <value>フィールド{0} {1}の最小の長さの文字列または配列型でなければなりません。</value>
    <comment>DataAnnotations: MinLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string with a maximum length of {1}." xml:space="preserve">
    <value>フィールド{0}、{1}の最大長さの文字列でなければなりません。</value>
    <comment>DataAnnotations: StringLengthAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must be a string with a minimum length of {2} and a maximum length of {1}." xml:space="preserve">
    <value>フィールド{0} {2}の最小長と{1}の最大長さの文字列でなければなりません。</value>
    <comment>DataAnnotations: StringLengthAttribute_ValidationErrorIncludingMinimum</comment>
  </data>
  <data name="The field {0} must be between {1} and {2}." xml:space="preserve">
    <value>フィールド{0}の間でなければなりません{1}と{2}。</value>
    <comment>DataAnnotations: RangeAttribute_ValidationError</comment>
  </data>
  <data name="The field {0} must match the regular expression '{1}'." xml:space="preserve">
    <value>フィールド{0}は、正規表現と一致しなければなりません「{1}」。</value>
    <comment>DataAnnotations: RegexAttribute_ValidationError</comment>
  </data>
  <data name="The instance provided must match the ObjectInstance on the ValidationContext supplied." xml:space="preserve">
    <value>提供インスタンスが供給ValidationContext上のObjectInstanceと一致する必要があります。</value>
    <comment>DataAnnotations: Validator_InstanceMustMatchValidationContextInstance</comment>
  </data>
  <data name="The key parameter at position {0} is null. Every key control parameter must be a string." xml:space="preserve">
    <value>位置{0}でキーパラメータがnullです。すべてのキー制御パラメータは文字列でなければなりません。</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyIsNull</comment>
  </data>
  <data name="The key parameter at position {0} with value '{1}' is not a string. Every key control parameter must be a string." xml:space="preserve">
    <value>値の位置{0}で重要なパラメータは、「{1}」の文字列ではありません。すべてのキー制御パラメータは文字列でなければなりません。</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyIsNotAString</comment>
  </data>
  <data name="The key parameter at position {0} with value '{1}' occurs more than once." xml:space="preserve">
    <value>値の位置{0}で重要なパラメータは、{1}が複数回発生します。</value>
    <comment>DataAnnotations: UIHintImplementation_ControlParameterKeyOccursMoreThanOnce</comment>
  </data>
  <data name="The maximum length must be a nonnegative integer." xml:space="preserve">
    <value>最大の長さは非負の整数でなければなりません。</value>
    <comment>DataAnnotations: StringLengthAttribute_InvalidMaxLength</comment>
  </data>
  <data name="The maximum value '{0}' must be greater than or equal to the minimum value '{1}'." xml:space="preserve">
    <value>最大値は「{0}」「{1}」よりも大きいかまたは最小値に等しくなければなりません。</value>
    <comment>DataAnnotations: RangeAttribute_MinGreaterThanMax</comment>
  </data>
  <data name="The minimum and maximum values must be set." xml:space="preserve">
    <value>最小値と最大値を設定しなければなりません。</value>
    <comment>DataAnnotations: RangeAttribute_Must_Set_Min_And_Max</comment>
  </data>
  <data name="The number of control parameters must be even." xml:space="preserve">
    <value>制御パラメータの数は偶数でなければなりません。</value>
    <comment>DataAnnotations: UIHintImplementation_NeedEvenNumberOfControlParameters</comment>
  </data>
  <data name="The OperandType must be set when strings are used for minimum and maximum values." xml:space="preserve">
    <value>文字列は最小値と最大値のために使用されている場合OperandTypeを設定する必要があります。</value>
    <comment>DataAnnotations: RangeAttribute_Must_Set_Operand_Type</comment>
  </data>
  <data name="The pattern must be set to a valid regular expression." xml:space="preserve">
    <value>パターンは、有効な正規表現に設定する必要があります。</value>
    <comment>DataAnnotations: RegularExpressionAttribute_Empty_Pattern</comment>
  </data>
  <data name="The property '{0}' on resource type '{1}' is not a string type." xml:space="preserve">
    <value>リソース・タイプのプロパティ「{0}」「{1}」文字列型ではありません。</value>
    <comment>DataAnnotations:ValidationAttribute_ResourcePropertyNotStringType</comment>
  </data>
  <data name="The property {0}.{1} could not be found." xml:space="preserve">
    <value>プロパティ{0}。{1}が見つかりませんでした。</value>
    <comment>DataAnnotations: Common_PropertyNotFound</comment>
  </data>
  <data name="The resource type '{0}' does not have an accessible static property named '{1}'." xml:space="preserve">
    <value>リソースタイプ「{0}」「{1}」という名前のアクセス可能な静的プロパティを持っていません。</value>
    <comment>DataAnnotations: ValidationAttribute_ResourceTypeDoesNotHaveProperty</comment>
  </data>
  <data name="The supplied value is invalid for {0}." xml:space="preserve">
    <value>供給された値{0}は無効です。</value>
    <comment>ModelBinding: ModelState_UnknownValueIsInvalid</comment>
  </data>
  <data name="The supplied value is invalid." xml:space="preserve">
    <value>指定された値が無効です。</value>
    <comment>ModelBinding: ModelState_NonPropertyUnknownValueIsInvalid</comment>
  </data>
  <data name="The type '{0}' does not contain a public property named '{1}'." xml:space="preserve">
    <value>タイプは、「{0}」「{1}」という名前のパブリックプロパティを含んでいません。</value>
    <comment>DataAnnotations: AttributeStore_Unknown_Property</comment>
  </data>
  <data name="The type '{0}' needs to represent an enumeration type." xml:space="preserve">
    <value>型「{0}」列挙型を表す必要があります。</value>
    <comment>DataAnnotations: EnumDataTypeAttribute_TypeNeedsToBeAnEnum</comment>
  </data>
  <data name="The type provided for EnumDataTypeAttribute cannot be null." xml:space="preserve">
    <value>EnumDataTypeAttributeのために提供タイプはnullにすることはできません。</value>
    <comment>DataAnnotations: EnumDataTypeAttribute_TypeCannotBeNull</comment>
  </data>
  <data name="The type {0} must implement {1}." xml:space="preserve">
    <value>タイプ{0}は{1}を実装しなければなりません。</value>
    <comment>DataAnnotations: RangeAttribute_ArbitraryTypeNotIComparable</comment>
  </data>
  <data name="The value '{0}' is invalid." xml:space="preserve">
    <value>値は{0}は無効です。</value>
    <comment>ModelBinding: HtmlGeneration_ValueIsInvalid, ModelBinding_NullValueNotValid</comment>
  </data>
  <data name="The value '{0}' is not valid for {1}." xml:space="preserve">
    <value>値は{0}、{1}には無効です。</value>
    <comment>ModelBinding: ModelState_AttemptedValueIsInvalid</comment>
  </data>
  <data name="The value '{0}' is not valid." xml:space="preserve">
    <value>値は「{0}」は有効ではありません。</value>
    <comment>ModelBinding: ModelState_NonPropertyAttemptedValueIsInvalid</comment>
  </data>
  <data name="The value for property '{0}' must be of type '{1}'." xml:space="preserve">
    <value>プロパティの値は、「{0}」タイプ「{1}」でなければなりません。</value>
    <comment>DataAnnotations: Validator_Property_Value_Wrong_Type</comment>
  </data>
  <data name="The {0} field is not a valid credit card number." xml:space="preserve">
    <value>{0}フィールドには有効なクレジットカード番号ではありません。</value>
    <comment>DataAnnotations: CreditCardAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid e-mail address." xml:space="preserve">
    <value>{0}フィールドは、有効な電子メールアドレスではありません。</value>
    <comment>DataAnnotations: EmailAddressAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid fully-qualified http, https, or ftp URL." xml:space="preserve">
    <value>{0}フィールドは、HTTP、HTTPS、またはFTP URLの有効な完全修飾ではありません。</value>
    <comment>DataAnnotations: UrlAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is not a valid phone number." xml:space="preserve">
    <value>{0}フィールドは、有効な電話番号ではありません。</value>
    <comment>DataAnnotations: PhoneAttribute_Invalid</comment>
  </data>
  <data name="The {0} field is required." xml:space="preserve">
    <value>{0}フィールドが必要です。</value>
    <comment>DataAnnotations: RequiredAttribute_ValidationError</comment>
  </data>
  <data name="The {0} field only accepts files with the following extensions: {1}" xml:space="preserve">
    <value>{1}：{0}フィールドは、以下の拡張子を持つファイルを受け付けます</value>
    <comment>DataAnnotations: FileExtensionsAttribute_Invalid</comment>
  </data>
  <data name="The {0} property has not been set.  Use the {1} method to get the value." xml:space="preserve">
    <value>{0}プロパティが設定されていません。値を取得する{1}メソッドを使用します。</value>
    <comment>DataAnnotations: DisplayAttribute_PropertyNotSet</comment>
  </data>
  <data name="User already has a password set." xml:space="preserve">
    <value>ユーザーは、すでにパスワードが設定されています。</value>
    <comment>Identity: UserAlreadyHasPassword</comment>
  </data>
  <data name="User already in role '{0}'." xml:space="preserve">
    <value>既に役割におけるユーザ{0}。</value>
    <comment>Identity: UserAlreadyInRole</comment>
  </data>
  <data name="User is not in role '{0}'." xml:space="preserve">
    <value>ユーザは、役割「{0}」ではありません。</value>
    <comment>Identity: UserNotInRole</comment>
  </data>
  <data name="User name '{0}' is already taken." xml:space="preserve">
    <value>ユーザ名「{0}」は既に取られます。</value>
    <comment>Identity: DuplicateUserName</comment>
  </data>
  <data name="User name '{0}' is invalid, can only contain letters or digits." xml:space="preserve">
    <value>ユーザ名は「{0}」、無効であるのみ文字または数字を含むことができます。</value>
    <comment>Identity: InvalidUserName</comment>
  </data>
  <data name="{0} is not valid." xml:space="preserve">
    <value>{0}は有効ではありません。</value>
    <comment>DataAnnotations: CustomValidationAttribute_ValidationError</comment>
  </data>
  <data name="'{0}' and '{1}' do not match." xml:space="preserve">
    <value>{0}」と「{1}と一致しません。</value>
    <comment>DataAnnotations: CompareAttribute_MustMatch</comment>
  </data>
</root>